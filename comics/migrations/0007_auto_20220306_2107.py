# Generated by Django 4.0.3 on 2022-03-06 21:07

from django.db import migrations

ISSUES = range(100, 200)


def create_issues(apps, schema_editor):
    Comic = apps.get_model("comics", "Comic")
    key_issues = {
        100,
        101,
        107,
        109,
        120,
        121,
        129,
        130,
        137,
        141,
        158,
    }

    def lookup_year(issue):
        years = {
            1976: set(range(100, 103 + 1)),
            1977: set(range(104, 109 + 1)),
            1978: set(range(110, 119 + 1)),
            1979: set(range(120, 131 + 1)),
            1980: set(range(132, 140 + 1)),
            1981: set(range(141, 152 + 1)),
            1982: set(range(153, 164 + 1)),
            1983: set(range(165, 176 + 1)),
            1984: set(range(177, 188 + 1)),
            1985: set(range(189, 199 + 1)),
        }
        for key, value in years.items():
            if issue in value:
                return key
        raise ValueError("year not found")

    for issue in ISSUES:
        Comic(
            issue_number=issue,
            key_issue=issue in key_issues,
            year_released=lookup_year(issue),
        ).save()


def reverse_create_issues(apps, schema_editor):
    Comic = apps.get_model("comics", "Comic")
    for issue in ISSUES:
        Comic.objects.get(issue_number=issue).delete()


class Migration(migrations.Migration):

    dependencies = [
        ("comics", "0006_comic_year_released_alter_comic_issue_number"),
    ]

    operations = [migrations.RunPython(create_issues, reverse_create_issues)]
